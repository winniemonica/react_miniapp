{"ast":null,"code":"var _jsxFileName = \"D:\\\\latihan\\\\course2\\\\react\\\\fullstack_todo\\\\todosfrontend\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\nimport * as apiCalls from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIURL = '/api/todos/';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this); // this.deleteTodo = this.deleteTodo.bind(this)\n  } // componentWillMount() {\n  //     this.loadTodos();\n  // }\n  // async loadTodos() {\n  //     let todos = await apiCalls.getTodos()\n  //     this.setState({ todos })\n  // }\n  // async addTodo(val) {\n  //     let newTodo = await apiCalls.createTodo(val)\n  //     this.setState({ todos: [...this.state.todos, newTodo] })\n  // }\n  // async deleteTodo(id) {\n  //     await apiCalls.removeTodo(id)\n  //     const todos = this.state.todos.filter(todo => todo._id !== id)\n  //     this.setState({ todos });\n  // }\n\n\n  toggleTodo(todo) {\n    const updateURL = APIURL + todo._id;\n    fetch(updateURL, {\n      method: 'PUT',\n      headers: new Headers({\n        'Content-type': 'application/json'\n      }),\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(res => {\n      if (!res.ok) {\n        if (res.status >= 400 && res.status < 500) {\n          return res.json().then(d => {\n            let err = {\n              errorMessage: d.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please try again later, server not responding'\n          };\n          throw err;\n        }\n      }\n\n      return res.json();\n    }).then(updateTodo => {\n      const todos = this.state.todos.map(todo => todo._id === updateTodo._id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n      this.setState({\n        todos\n      });\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(t => /*#__PURE__*/_jsxDEV(TodoItem, { ...t,\n      onDelete: this.deleteTodo.bind(this, t._id),\n      onToggle: this.toggleTodo.bind(this, t)\n    }, t._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: this.addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), todos]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["D:/latihan/course2/react/fullstack_todo/todosfrontend/src/TodoList.js"],"names":["React","Component","TodoForm","TodoItem","apiCalls","APIURL","TodoList","constructor","props","state","todos","addTodo","bind","toggleTodo","todo","updateURL","_id","fetch","method","headers","Headers","body","JSON","stringify","completed","then","res","ok","status","json","d","err","errorMessage","message","updateTodo","map","setState","render","t","deleteTodo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItem from './TodoItem';\r\nimport * as apiCalls from './api';\r\nconst APIURL = '/api/todos/';\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            todos: []\r\n        }\r\n        this.addTodo = this.addTodo.bind(this)\r\n        // this.deleteTodo = this.deleteTodo.bind(this)\r\n    }\r\n\r\n    // componentWillMount() {\r\n    //     this.loadTodos();\r\n    // }\r\n\r\n    // async loadTodos() {\r\n    //     let todos = await apiCalls.getTodos()\r\n    //     this.setState({ todos })\r\n    // }\r\n    // async addTodo(val) {\r\n    //     let newTodo = await apiCalls.createTodo(val)\r\n    //     this.setState({ todos: [...this.state.todos, newTodo] })\r\n\r\n    // }\r\n    // async deleteTodo(id) {\r\n    //     await apiCalls.removeTodo(id)\r\n    //     const todos = this.state.todos.filter(todo => todo._id !== id)\r\n    //     this.setState({ todos });\r\n    // }\r\n\r\n\r\ntoggleTodo(todo){\r\n    const updateURL = APIURL + todo._id;\r\n    fetch(updateURL, {\r\n        method: 'PUT',\r\n        headers: new Headers({\r\n            'Content-type': 'application/json',\r\n        }),\r\n        body: JSON.stringify({ completed: !todo.completed })\r\n    })\r\n        .then(res => {\r\n            if (!res.ok) {\r\n                if (res.status >= 400 && res.status < 500) {\r\n                    return res.json().then(d => {\r\n                        let err = { errorMessage: d.message }\r\n                        throw err;\r\n                    })\r\n                } else {\r\n                    let err = { errorMessage: 'Please try again later, server not responding' }\r\n                    throw err;\r\n                }\r\n            }\r\n            return res.json()\r\n        })\r\n        .then(updateTodo => {\r\n            const todos = this.state.todos.map(todo =>\r\n                (todo._id === updateTodo._id)\r\n                    ? { ...todo, completed: !todo.completed }\r\n                    : todo\r\n            )\r\n            this.setState({ todos })\r\n        })\r\n\r\n}\r\nrender() {\r\n    const todos = this.state.todos.map((t) => (\r\n        <TodoItem\r\n            key={t._id}\r\n            {...t}\r\n            onDelete={this.deleteTodo.bind(this, t._id)}\r\n            onToggle={this.toggleTodo.bind(this, t)}\r\n        />\r\n    ))\r\n    return (\r\n        <div>\r\n            <h1>TodoList</h1>\r\n            <TodoForm addTodo={this.addTodo} />\r\n            {todos}\r\n        </div >\r\n    );\r\n}\r\n}\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}