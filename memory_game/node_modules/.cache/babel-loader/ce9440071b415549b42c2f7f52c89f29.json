{"ast":null,"code":"var _jsxFileName = \"D:\\\\latihan\\\\course2\\\\react\\\\memory_game\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Card from './Card';\nimport shuffle from 'shuffle-array';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardState = {\n  HIDING: 0,\n  SHOWING: 1,\n  MATCH: 2\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let cards = [{\n      id: 0,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red'\n    }, {\n      id: 1,\n      cardState: CardState.HIDING,\n      backgroundColor: 'red'\n    }, {\n      id: 2,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy'\n    }, {\n      id: 3,\n      cardState: CardState.HIDING,\n      backgroundColor: 'navy'\n    }, {\n      id: 4,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green'\n    }, {\n      id: 5,\n      cardState: CardState.HIDING,\n      backgroundColor: 'green'\n    }, {\n      id: 6,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow'\n    }, {\n      id: 7,\n      cardState: CardState.HIDING,\n      backgroundColor: 'yellow'\n    }, {\n      id: 8,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black'\n    }, {\n      id: 9,\n      cardState: CardState.HIDING,\n      backgroundColor: 'black'\n    }, {\n      id: 10,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple'\n    }, {\n      id: 11,\n      cardState: CardState.HIDING,\n      backgroundColor: 'purple'\n    }, {\n      id: 12,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink'\n    }, {\n      id: 13,\n      cardState: CardState.HIDING,\n      backgroundColor: 'pink'\n    }, {\n      id: 14,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightskyblue'\n    }, {\n      id: 15,\n      cardState: CardState.HIDING,\n      backgroundColor: 'lightskyblue'\n    }];\n    cards = shuffle(cards);\n    this.state = {\n      cards\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n  }\n\n  handleClick(id) {\n    const mapCardState = (cards, idToChange, newCardState) => {\n      return cards, map(c => {\n        if (idToChange.includes(c.id)) {\n          return { ...c,\n            cardState: newCardState\n          };\n        }\n\n        return c;\n      });\n    }; // this.setState(prev => {\n    //   let cards = prev.cards.map(c => (\n    //     c.id === id ? {\n    //       ...c,\n    //       cardState: c.cardState === CardState.HIDING ? CardState.MATCHING :\n    //         CardState.HIDING\n    //     } : c\n    //   ))\n    //   return { cards }\n    // })\n\n\n    const foundCard = this.state.cards.find(c => c.id === id);\n\n    if (this.state.noClick || foundCard.cardState !== CardState.HIDING) {\n      return;\n    }\n\n    let noClick = false;\n    let cards = mapCardState(this.state.cards, [id], CardState.SHOWING);\n    const showingCards = cards.filter(c => c.cardState === CardState.SHOWING);\n    const ids = showingCards.map(c => c.id);\n  }\n\n  handleNewGame() {\n    let cards = this.state.cards.map(c => ({ ...c,\n      cardState: CardState.HIDING\n    }));\n    cards = shuffle(cards);\n    this.setState({\n      cards\n    });\n  }\n\n  render() {\n    const cards = this.state.cards.map(d => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        showing: d.cardState !== CardState.HIDING,\n        backgroundColor: d.backgroundColor,\n        onClick: () => this.handleClick(d.id)\n      }, d.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        onNewGame: this.handleNewGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), cards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/latihan/course2/react/memory_game/src/App.js"],"names":["React","Component","Navbar","Card","shuffle","CardState","HIDING","SHOWING","MATCH","App","constructor","props","cards","id","cardState","backgroundColor","state","handleClick","bind","handleNewGame","mapCardState","idToChange","newCardState","map","c","includes","foundCard","find","noClick","showingCards","filter","ids","setState","render","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport Card from './Card';\nimport shuffle from 'shuffle-array';\nimport './App.css';\n\n\nconst CardState = {\n  HIDING: 0,\n  SHOWING: 1,\n  MATCH: 2\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    let cards = [\n      { id: 0, cardState: CardState.HIDING, backgroundColor: 'red' },\n      { id: 1, cardState: CardState.HIDING, backgroundColor: 'red' },\n      { id: 2, cardState: CardState.HIDING, backgroundColor: 'navy' },\n      { id: 3, cardState: CardState.HIDING, backgroundColor: 'navy' },\n      { id: 4, cardState: CardState.HIDING, backgroundColor: 'green' },\n      { id: 5, cardState: CardState.HIDING, backgroundColor: 'green' },\n      { id: 6, cardState: CardState.HIDING, backgroundColor: 'yellow' },\n      { id: 7, cardState: CardState.HIDING, backgroundColor: 'yellow' },\n      { id: 8, cardState: CardState.HIDING, backgroundColor: 'black' },\n      { id: 9, cardState: CardState.HIDING, backgroundColor: 'black' },\n      { id: 10, cardState: CardState.HIDING, backgroundColor: 'purple' },\n      { id: 11, cardState: CardState.HIDING, backgroundColor: 'purple' },\n      { id: 12, cardState: CardState.HIDING, backgroundColor: 'pink' },\n      { id: 13, cardState: CardState.HIDING, backgroundColor: 'pink' },\n      { id: 14, cardState: CardState.HIDING, backgroundColor: 'lightskyblue' },\n      { id: 15, cardState: CardState.HIDING, backgroundColor: 'lightskyblue' }\n    ];\n    cards = shuffle(cards);\n    this.state = { cards }\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n\n  }\n  handleClick(id) {\n    const mapCardState = (cards, idToChange, newCardState) => {\n      return cards, map(c => {\n        if (idToChange.includes(c.id)) {\n          return {\n            ...c,\n            cardState: newCardState\n          }\n        }\n        return c;\n      })\n    }\n    // this.setState(prev => {\n    //   let cards = prev.cards.map(c => (\n    //     c.id === id ? {\n    //       ...c,\n    //       cardState: c.cardState === CardState.HIDING ? CardState.MATCHING :\n    //         CardState.HIDING\n    //     } : c\n    //   ))\n    //   return { cards }\n    // })\n    const foundCard = this.state.cards.find(c => c.id === id)\n    if (this.state.noClick || foundCard.cardState !== CardState.HIDING) {\n      return;\n    }\n    let noClick = false;\n\n    let cards = mapCardState(this.state.cards, [id], CardState.SHOWING);\n\n    const showingCards = cards.filter((c) => c.cardState === CardState.SHOWING)\n\n    const ids = showingCards.map(c => c.id)\n\n    \n  }\n\n  handleNewGame() {\n    let cards = this.state.cards.map(c => ({\n      ...c,\n      cardState: CardState.HIDING\n    }))\n    cards = shuffle(cards)\n    this.setState({ cards })\n  }\n\n\n  render() {\n    const cards = this.state.cards.map(d => {\n      return (\n        <Card\n          key={d.id}\n          showing={d.cardState !== CardState.HIDING}\n          backgroundColor={d.backgroundColor}\n          onClick={() => this.handleClick(d.id)} />\n      )\n    })\n    return (\n      <div className=\"App\">\n        <Navbar onNewGame={this.handleNewGame} />\n        {cards}\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}